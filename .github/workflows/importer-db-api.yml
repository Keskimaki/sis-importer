name: importer-db-api

on:
  push:
    branches:
      - master
      - trunk 
    paths:
      - importer-db-api/**
      - .github/workflows/importer-db-api.yml

jobs:
  test-lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Login to toska docker registry
        uses: docker/login-action@v1
        with:
          registry: registry.toska.cs.helsinki.fi
          username: ${{ secrets.TOSKAREGISTRY_USERNAME }}
          password: ${{ secrets.TOSKAREGISTRY_PASSWORD }}

      - name: Lint and test
        run: npm run ci --prefix ./importer-db-api

  build-push:
    runs-on: ubuntu-latest
    needs: test-lint
    steps:
    - uses: actions/checkout@v2
    
    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0 
      with:
        repository: toska/sis-importer-db-api
        path: importer-db-api
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tag_with_ref: true

  notify:
    runs-on: ubuntu-20.04
    needs: [test-lint, build-push]
    if: always()
    steps:
      - name: Notify failed
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        if: (needs.test-lint.result != 'success' || needs.build-push.result != 'success')
        with:
          webhook-url: ${{ secrets.SLACKBOT_URL }}
          message-type: test-failure
      - name: Notify success
        uses:  UniversityOfHelsinkiCS/slackbot-action@v1.4.2
        if: (needs.test-lint.result == 'success' || needs.build-push.result == 'success')
        with:
          webhook-url: ${{ secrets.SLACKBOT_URL }}
          message-type: deployment
          deployment-target: production
          softa-url: https://youtu.be/NUYvbT6vTPs
